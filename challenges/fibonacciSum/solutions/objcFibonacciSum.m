//
//  main.m
//  FibonacciSum
//
//  Created by Julianne on 6/24/16.
//  Copyright Â© 2016 Julianne Goyena. All rights reserved.
//

#import <Foundation/Foundation.h>

int sum = 0;

void fibonacci(NSMutableArray *firstAndSecondTerms) {
    NSNumber *newTerm = [NSNumber numberWithInteger:([[firstAndSecondTerms objectAtIndex:0] intValue] + [[firstAndSecondTerms objectAtIndex:1] intValue])];
    if ([newTerm intValue] >= 4000000) {
        NSLog(@"%i", sum);
    }
    else {
        if ([newTerm intValue] % 2 == 0) {
            sum += [newTerm intValue];
        }
        NSMutableArray *newArray = [[NSMutableArray alloc] initWithObjects:[firstAndSecondTerms objectAtIndex:1], newTerm, nil];
        fibonacci(newArray);
    }
}

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        
        //Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        //
        //1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        //By considering the terms in the Fibonacci sequence whose values do not exceed
        //four million, find the sum of the even-valued terms.
        
        NSMutableArray *startArray = [[NSMutableArray alloc] initWithObjects:[NSNumber numberWithInt:1],[NSNumber numberWithInt:2], nil];
        
        fibonacci(startArray);
        
    }
    return 0;
}
